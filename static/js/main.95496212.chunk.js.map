{"version":3,"sources":["types/project.typedefs.js","components/Product.jsx","components/ProductsList.jsx","components/User.jsx","components/Order.jsx","components/OrdersList.jsx","App.js","index.js"],"names":["UserType","PropTypes","shape","id","number","isRequired","name","string","ProductType","orderId","Product","userId","title","user","products","arrayOf","product","propTypes","ProductsList","className","map","key","User","Order","order","length","OrdersList","orders","prepearedOrders","usersFromServer","find","productsFromServer","filter","App","ReactDOM","render","document","getElementById"],"mappings":"g7BAEaA,EAAWC,IAAUC,MAAM,CACtCC,GAAIF,IAAUG,OAAOC,WACrBC,KAAML,IAAUM,OAAOF,aAGZG,EAAcP,IAAUC,MAAM,CACzCC,GAAIF,IAAUG,OAAOC,WACrBC,KAAML,IAAUM,OAAOF,WACvBI,QAASR,IAAUG,OAAOC,aCPfK,GDUYT,IAAUC,MAAM,CACvCC,GAAIF,IAAUG,OAAOC,WACrBM,OAAQV,IAAUG,OAAOC,WACzBO,MAAOX,IAAUM,OAAOF,WACxBQ,KAAMb,EAASK,WACfS,SAAUb,IAAUc,QAAQP,GAAaH,aCfpB,SAAC,GAAD,IAAGW,EAAH,EAAGA,QAAH,OACrB,8CACMA,EAAQV,SAIhBI,EAAQO,UAAY,CAClBD,QAASR,EAAYH,YCLhB,IAAMa,EAAe,SAAC,GAAD,IAAGJ,EAAH,EAAGA,SAAH,OAC1B,wBAAIK,UAAU,WACXL,EAASM,KAAI,SAAAJ,GAAO,OACnB,wBAAIK,IAAKL,EAAQb,IACf,kBAAC,EAAD,CAASa,QAASA,UCNbM,EAAO,SAAC,GAAD,IAAGT,EAAH,EAAGA,KAAH,OAClB,8CACMA,EAAKP,QAIbgB,EAAKL,UAAY,CACfJ,KAAMb,EAASK,YCLV,IAAMkB,EAAQ,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACdZ,EAAgBY,EAAhBZ,MAAOC,EAASW,EAATX,KAEf,OACE,yBAAKM,UAAU,WACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,kBACb,qCACMP,EADN,OAEE,kBAAC,EAAD,CAAMC,KAAMA,KAEbW,EAAMV,SAASW,OACZ,kBAAC,EAAD,CAAcX,SAAUU,EAAMV,WAC9B,oDCbDY,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,yBAAKR,UAAU,aACZQ,EAAOP,KAAI,SAAAI,GAAK,OACf,kBAAC,EAAD,CAAOH,IAAKG,EAAMrB,GAAIqB,MAAOA,S,sBCC7BI,E,KAAmCR,KAAI,SAAAI,GAAK,kCAC7CA,GAD6C,IAEhDX,KAAMgB,EAAgBC,MAAK,SAAAjB,GAAI,OAAIA,EAAKV,KAAOqB,EAAMb,UACrDG,SAAUiB,EAAmBC,QAAO,SAAAhB,GAAO,OAAIA,EAAQP,UAAYe,EAAMrB,WAW5D8B,MARf,WACE,OACE,oCACE,kBAAC,EAAD,CAAYN,OAAQC,MCd1BM,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.95496212.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nexport const UserType = PropTypes.shape({\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n});\n\nexport const ProductType = PropTypes.shape({\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  orderId: PropTypes.number.isRequired,\n});\n\nexport const OrderType = PropTypes.shape({\n  id: PropTypes.number.isRequired,\n  userId: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  user: UserType.isRequired,\n  products: PropTypes.arrayOf(ProductType).isRequired,\n});\n","import React from 'react';\nimport { ProductType } from '../types/project.typedefs';\n\nexport const Product = ({ product }) => (\n  <>\n    {`${product.name}`}\n  </>\n);\n\nProduct.propTypes = {\n  product: ProductType.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Product } from './Product';\nimport { ProductType } from '../types/project.typedefs';\n\nexport const ProductsList = ({ products }) => (\n  <ul className=\"ui list\">\n    {products.map(product => (\n      <li key={product.id}>\n        <Product product={product} />\n      </li>\n    ))}\n  </ul>\n);\n\nProductsList.propTypes = {\n  products: PropTypes.arrayOf(ProductType).isRequired,\n};\n","import React from 'react';\nimport { UserType } from '../types/project.typedefs';\n\nexport const User = ({ user }) => (\n  <>\n    {`${user.name}`}\n  </>\n);\n\nUser.propTypes = {\n  user: UserType.isRequired,\n};\n","import React from 'react';\nimport { ProductsList } from './ProductsList';\nimport { User } from './User';\nimport { OrderType } from '../types/project.typedefs';\n\nexport const Order = ({ order }) => {\n  const { title, user } = order;\n\n  return (\n    <div className=\"ui card\">\n      <div className=\"ui content\">\n        <div className=\"ui description\">\n          <p>\n            {`${title} - `}\n            <User user={user} />\n          </p>\n          {order.products.length\n            ? <ProductsList products={order.products} />\n            : <p>No products found</p>\n          }\n        </div>\n      </div>\n    </div>\n  );\n};\n\nOrder.propTypes = {\n  order: OrderType.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Order } from './Order';\nimport { OrderType } from '../types/project.typedefs';\n\nexport const OrdersList = ({ orders }) => (\n  <div className=\"container\">\n    {orders.map(order => (\n      <Order key={order.id} order={order} />\n    ))}\n  </div>\n);\n\nOrdersList.propTypes = {\n  orders: PropTypes.arrayOf(OrderType).isRequired,\n};\n","import React from 'react';\nimport { OrdersList } from './components/OrdersList';\n\nimport './App.scss';\n\nimport usersFromServer from './api/users.json';\nimport productsFromServer from './api/products.json';\nimport ordersFromServer from './api/orders.json';\n\nconst prepearedOrders = ordersFromServer.map(order => ({\n  ...order,\n  user: usersFromServer.find(user => user.id === order.userId),\n  products: productsFromServer.filter(product => product.orderId === order.id),\n}));\n\nfunction App() {\n  return (\n    <>\n      <OrdersList orders={prepearedOrders} />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}